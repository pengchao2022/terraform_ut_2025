name: Terraform Plan and Apply

on:
  push:
    branches: [ main ]  # 只在推送到 main 分支时触发
  pull_request:         # 在 PR 时也运行，但只做 plan

env:
  AWS_REGION: us-east-1
  TF_STATE_BUCKET: terraformstatefile090909
  TF_STATE_KEY: s3pub_terraform.tfstate

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    environment: production

    permissions:
      contents: read
      id-token: write  # 用于 OIDC 身份验证

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.8.0  # 使用你需要的版本

    - name: Terraform Format
      id: fmt
      run: terraform fmt -check

    - name: Terraform Init
      id: init
      run: terraform init
      env:
        # 如果使用 Access Key/Secret 方式
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color -input=false
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
